// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/automl/v1beta1/data_items.proto

package automl

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/any"
	_ "github.com/golang/protobuf/ptypes/duration"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A representation of an image.
// Only images up to 30MB in size are supported.
type Image struct {
	// Input only. The data representing the image.
	// For Predict calls [image_bytes][] must be set, as other options are not
	// currently supported by prediction API. You can read the contents of an
	// uploaded image by using the [content_uri][] field.
	//
	// Types that are valid to be assigned to Data:
	//	*Image_ImageBytes
	//	*Image_InputConfig
	Data isImage_Data `protobuf_oneof:"data"`
	// Output only. HTTP URI to the thumbnail image.
	ThumbnailUri         string   `protobuf:"bytes,4,opt,name=thumbnail_uri,json=thumbnailUri,proto3" json:"thumbnail_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd1fd4e23d5f1ca3, []int{0}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

type isImage_Data interface {
	isImage_Data()
}

type Image_ImageBytes struct {
	ImageBytes []byte `protobuf:"bytes,1,opt,name=image_bytes,json=imageBytes,proto3,oneof"`
}

type Image_InputConfig struct {
	InputConfig *InputConfig `protobuf:"bytes,6,opt,name=input_config,json=inputConfig,proto3,oneof"`
}

func (*Image_ImageBytes) isImage_Data() {}

func (*Image_InputConfig) isImage_Data() {}

func (m *Image) GetData() isImage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Image) GetImageBytes() []byte {
	if x, ok := m.GetData().(*Image_ImageBytes); ok {
		return x.ImageBytes
	}
	return nil
}

func (m *Image) GetInputConfig() *InputConfig {
	if x, ok := m.GetData().(*Image_InputConfig); ok {
		return x.InputConfig
	}
	return nil
}

func (m *Image) GetThumbnailUri() string {
	if m != nil {
		return m.ThumbnailUri
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Image) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Image_ImageBytes)(nil),
		(*Image_InputConfig)(nil),
	}
}

// A representation of a text snippet.
type TextSnippet struct {
	// Required. The content of the text snippet as a string. Up to 250000
	// characters long.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// The format of the source text. Currently the only two allowed values are
	// "text/html" and "text/plain". If left blank the format is automatically
	// determined from the type of the uploaded content.
	MimeType string `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Output only. HTTP URI where you can download the content.
	ContentUri           string   `protobuf:"bytes,4,opt,name=content_uri,json=contentUri,proto3" json:"content_uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextSnippet) Reset()         { *m = TextSnippet{} }
func (m *TextSnippet) String() string { return proto.CompactTextString(m) }
func (*TextSnippet) ProtoMessage()    {}
func (*TextSnippet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd1fd4e23d5f1ca3, []int{1}
}

func (m *TextSnippet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextSnippet.Unmarshal(m, b)
}
func (m *TextSnippet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextSnippet.Marshal(b, m, deterministic)
}
func (m *TextSnippet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextSnippet.Merge(m, src)
}
func (m *TextSnippet) XXX_Size() int {
	return xxx_messageInfo_TextSnippet.Size(m)
}
func (m *TextSnippet) XXX_DiscardUnknown() {
	xxx_messageInfo_TextSnippet.DiscardUnknown(m)
}

var xxx_messageInfo_TextSnippet proto.InternalMessageInfo

func (m *TextSnippet) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *TextSnippet) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *TextSnippet) GetContentUri() string {
	if m != nil {
		return m.ContentUri
	}
	return ""
}

// A structured text document e.g. a PDF.
type Document struct {
	// An input config specifying the content of the document.
	InputConfig          *DocumentInputConfig `protobuf:"bytes,1,opt,name=input_config,json=inputConfig,proto3" json:"input_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd1fd4e23d5f1ca3, []int{2}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetInputConfig() *DocumentInputConfig {
	if m != nil {
		return m.InputConfig
	}
	return nil
}

// A representation of a row in a relational table.
type Row struct {
	// Input Only.
	// The resource IDs of the column specs describing the columns of the row.
	// If set must contain, but possibly in a different order, all input feature
	//
	// [column_spec_ids][google.cloud.automl.v1beta1.TablesModelMetadata.input_feature_column_specs]
	// of the Model this row is being passed to.
	// Note: The below `values` field must match order of this field, if this
	// field is set.
	ColumnSpecIds []string `protobuf:"bytes,2,rep,name=column_spec_ids,json=columnSpecIds,proto3" json:"column_spec_ids,omitempty"`
	// Input Only.
	// The values of the row cells, given in the same order as the
	// column_spec_ids, or, if not set, then in the same order as input feature
	//
	// [column_specs][google.cloud.automl.v1beta1.TablesModelMetadata.input_feature_column_specs]
	// of the Model this row is being passed to.
	Values               []*_struct.Value `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Row) Reset()         { *m = Row{} }
func (m *Row) String() string { return proto.CompactTextString(m) }
func (*Row) ProtoMessage()    {}
func (*Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd1fd4e23d5f1ca3, []int{3}
}

func (m *Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Row.Unmarshal(m, b)
}
func (m *Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Row.Marshal(b, m, deterministic)
}
func (m *Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Row.Merge(m, src)
}
func (m *Row) XXX_Size() int {
	return xxx_messageInfo_Row.Size(m)
}
func (m *Row) XXX_DiscardUnknown() {
	xxx_messageInfo_Row.DiscardUnknown(m)
}

var xxx_messageInfo_Row proto.InternalMessageInfo

func (m *Row) GetColumnSpecIds() []string {
	if m != nil {
		return m.ColumnSpecIds
	}
	return nil
}

func (m *Row) GetValues() []*_struct.Value {
	if m != nil {
		return m.Values
	}
	return nil
}

// Example data used for training or prediction.
type ExamplePayload struct {
	// Required. Input only. The example data.
	//
	// Types that are valid to be assigned to Payload:
	//	*ExamplePayload_Image
	//	*ExamplePayload_TextSnippet
	//	*ExamplePayload_Document
	//	*ExamplePayload_Row
	Payload              isExamplePayload_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ExamplePayload) Reset()         { *m = ExamplePayload{} }
func (m *ExamplePayload) String() string { return proto.CompactTextString(m) }
func (*ExamplePayload) ProtoMessage()    {}
func (*ExamplePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd1fd4e23d5f1ca3, []int{4}
}

func (m *ExamplePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExamplePayload.Unmarshal(m, b)
}
func (m *ExamplePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExamplePayload.Marshal(b, m, deterministic)
}
func (m *ExamplePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExamplePayload.Merge(m, src)
}
func (m *ExamplePayload) XXX_Size() int {
	return xxx_messageInfo_ExamplePayload.Size(m)
}
func (m *ExamplePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ExamplePayload.DiscardUnknown(m)
}

var xxx_messageInfo_ExamplePayload proto.InternalMessageInfo

type isExamplePayload_Payload interface {
	isExamplePayload_Payload()
}

type ExamplePayload_Image struct {
	Image *Image `protobuf:"bytes,1,opt,name=image,proto3,oneof"`
}

type ExamplePayload_TextSnippet struct {
	TextSnippet *TextSnippet `protobuf:"bytes,2,opt,name=text_snippet,json=textSnippet,proto3,oneof"`
}

type ExamplePayload_Document struct {
	Document *Document `protobuf:"bytes,4,opt,name=document,proto3,oneof"`
}

type ExamplePayload_Row struct {
	Row *Row `protobuf:"bytes,3,opt,name=row,proto3,oneof"`
}

func (*ExamplePayload_Image) isExamplePayload_Payload() {}

func (*ExamplePayload_TextSnippet) isExamplePayload_Payload() {}

func (*ExamplePayload_Document) isExamplePayload_Payload() {}

func (*ExamplePayload_Row) isExamplePayload_Payload() {}

func (m *ExamplePayload) GetPayload() isExamplePayload_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *ExamplePayload) GetImage() *Image {
	if x, ok := m.GetPayload().(*ExamplePayload_Image); ok {
		return x.Image
	}
	return nil
}

func (m *ExamplePayload) GetTextSnippet() *TextSnippet {
	if x, ok := m.GetPayload().(*ExamplePayload_TextSnippet); ok {
		return x.TextSnippet
	}
	return nil
}

func (m *ExamplePayload) GetDocument() *Document {
	if x, ok := m.GetPayload().(*ExamplePayload_Document); ok {
		return x.Document
	}
	return nil
}

func (m *ExamplePayload) GetRow() *Row {
	if x, ok := m.GetPayload().(*ExamplePayload_Row); ok {
		return x.Row
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExamplePayload) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExamplePayload_Image)(nil),
		(*ExamplePayload_TextSnippet)(nil),
		(*ExamplePayload_Document)(nil),
		(*ExamplePayload_Row)(nil),
	}
}

func init() {
	proto.RegisterType((*Image)(nil), "google.cloud.automl.v1beta1.Image")
	proto.RegisterType((*TextSnippet)(nil), "google.cloud.automl.v1beta1.TextSnippet")
	proto.RegisterType((*Document)(nil), "google.cloud.automl.v1beta1.Document")
	proto.RegisterType((*Row)(nil), "google.cloud.automl.v1beta1.Row")
	proto.RegisterType((*ExamplePayload)(nil), "google.cloud.automl.v1beta1.ExamplePayload")
}

func init() {
	proto.RegisterFile("google/cloud/automl/v1beta1/data_items.proto", fileDescriptor_bd1fd4e23d5f1ca3)
}

var fileDescriptor_bd1fd4e23d5f1ca3 = []byte{
	// 558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0x8d, 0xe3, 0x36, 0x6d, 0xc6, 0xed, 0xef, 0x27, 0xf9, 0x80, 0x4c, 0x83, 0xa8, 0x31, 0x7f,
	0xe4, 0x03, 0xb2, 0x69, 0xe0, 0x04, 0xa7, 0x26, 0x20, 0x92, 0x43, 0xa5, 0xca, 0x69, 0x7b, 0x40,
	0x41, 0xd6, 0xc6, 0xde, 0x9a, 0x95, 0xec, 0xdd, 0x95, 0xbd, 0xdb, 0x24, 0x77, 0xbe, 0x08, 0x17,
	0x3e, 0x0c, 0x9f, 0x0a, 0xed, 0xda, 0x29, 0x21, 0x42, 0x86, 0x9b, 0x67, 0xde, 0x7b, 0xb3, 0x33,
	0xef, 0xc9, 0xf0, 0x32, 0x63, 0x2c, 0xcb, 0x71, 0x98, 0xe4, 0x4c, 0xa6, 0x21, 0x92, 0x82, 0x15,
	0x79, 0x78, 0x77, 0xb6, 0xc0, 0x02, 0x9d, 0x85, 0x29, 0x12, 0x28, 0x26, 0x02, 0x17, 0x55, 0xc0,
	0x4b, 0x26, 0x98, 0x3d, 0xa8, 0xd9, 0x81, 0x66, 0x07, 0x35, 0x3b, 0x68, 0xd8, 0x27, 0xcf, 0xda,
	0x46, 0x11, 0x56, 0x8f, 0x38, 0x79, 0xd8, 0xb0, 0x74, 0xb5, 0x90, 0xb7, 0x21, 0xa2, 0xeb, 0x06,
	0x7a, 0xbc, 0x0b, 0xa5, 0xb2, 0x44, 0x82, 0x30, 0xda, 0xe0, 0x8f, 0x76, 0xf1, 0x4a, 0x94, 0x32,
	0x11, 0x3b, 0x28, 0xe2, 0x24, 0x44, 0x94, 0x32, 0xa1, 0xa5, 0xcd, 0xe6, 0xde, 0x77, 0x03, 0xf6,
	0xa7, 0x05, 0xca, 0xb0, 0xfd, 0x04, 0x2c, 0xa2, 0x3e, 0xe2, 0xc5, 0x5a, 0xe0, 0xca, 0x31, 0x5c,
	0xc3, 0x3f, 0x9a, 0x74, 0x22, 0xd0, 0xcd, 0x91, 0xea, 0xd9, 0x17, 0x70, 0x44, 0x28, 0x97, 0x22,
	0x4e, 0x18, 0xbd, 0x25, 0x99, 0xd3, 0x73, 0x0d, 0xdf, 0x1a, 0xfa, 0x41, 0xcb, 0xf5, 0xc1, 0x54,
	0x09, 0xc6, 0x9a, 0x3f, 0xe9, 0x44, 0x16, 0xf9, 0x55, 0xda, 0x4f, 0xe1, 0x58, 0x7c, 0x91, 0xc5,
	0x82, 0x22, 0x92, 0xc7, 0xb2, 0x24, 0xce, 0x9e, 0x6b, 0xf8, 0xfd, 0xe8, 0xe8, 0xbe, 0x79, 0x5d,
	0x92, 0x51, 0x0f, 0xf6, 0x94, 0xdd, 0x1e, 0x06, 0xeb, 0x0a, 0xaf, 0xc4, 0x8c, 0x12, 0xce, 0xb1,
	0xb0, 0x1d, 0x38, 0x48, 0x18, 0x15, 0x98, 0x0a, 0xbd, 0x69, 0x3f, 0xda, 0x94, 0xf6, 0x00, 0xfa,
	0x05, 0x29, 0x70, 0x2c, 0xd6, 0x1c, 0x3b, 0x5d, 0x8d, 0x1d, 0xaa, 0xc6, 0xd5, 0x9a, 0x63, 0xfb,
	0x14, 0xac, 0x86, 0xb7, 0xf5, 0x20, 0x34, 0xad, 0xeb, 0x92, 0x78, 0x31, 0x1c, 0xbe, 0x67, 0x89,
	0x2c, 0xd4, 0xa4, 0xd9, 0xce, 0xb9, 0x86, 0x3e, 0xf7, 0x55, 0xeb, 0xb9, 0x1b, 0xf1, 0xd6, 0xd9,
	0xbf, 0x1d, 0xed, 0x7d, 0x06, 0x33, 0x62, 0x4b, 0xfb, 0x05, 0xfc, 0x9f, 0xb0, 0x5c, 0x16, 0x34,
	0xae, 0x38, 0x4e, 0x62, 0x92, 0x56, 0x4e, 0xd7, 0x35, 0xfd, 0x7e, 0x74, 0x5c, 0xb7, 0x67, 0x1c,
	0x27, 0xd3, 0xb4, 0xb2, 0x03, 0xe8, 0xdd, 0xa1, 0x5c, 0xe2, 0xca, 0x31, 0x5d, 0xd3, 0xb7, 0x86,
	0x0f, 0x36, 0xaf, 0x6f, 0xc2, 0x0e, 0x6e, 0x14, 0x1c, 0x35, 0x2c, 0xef, 0x5b, 0x17, 0xfe, 0xfb,
	0xb0, 0x42, 0x05, 0xcf, 0xf1, 0x25, 0x5a, 0xe7, 0x0c, 0xa5, 0xf6, 0x5b, 0xd8, 0xd7, 0x19, 0x36,
	0xfb, 0x7b, 0xed, 0x71, 0x29, 0xe6, 0xa4, 0x13, 0xd5, 0x12, 0x95, 0xb8, 0xc0, 0x2b, 0x11, 0x57,
	0xb5, 0xed, 0xda, 0xcf, 0xbf, 0x25, 0xbe, 0x15, 0x93, 0x4a, 0x5c, 0x6c, 0xa5, 0x36, 0x86, 0xc3,
	0xb4, 0x31, 0x48, 0x7b, 0x6f, 0x0d, 0x9f, 0xff, 0x93, 0x9b, 0x93, 0x4e, 0x74, 0x2f, 0xb4, 0xdf,
	0x80, 0x59, 0xb2, 0xa5, 0x63, 0x6a, 0xbd, 0xdb, 0xaa, 0x8f, 0xd8, 0x72, 0xd2, 0x89, 0x14, 0x7d,
	0xd4, 0x87, 0x03, 0x5e, 0x1b, 0x32, 0xfa, 0x6a, 0xc0, 0x69, 0xc2, 0x8a, 0x36, 0xe5, 0xa5, 0xf1,
	0xe9, 0xbc, 0x81, 0x33, 0x96, 0x23, 0x9a, 0x05, 0xac, 0xcc, 0xc2, 0x0c, 0x53, 0x6d, 0x7b, 0x58,
	0x43, 0x88, 0x93, 0xea, 0x8f, 0x7f, 0xf5, 0xbb, 0xba, 0xfc, 0xd1, 0x1d, 0x7c, 0xd4, 0xc4, 0xf9,
	0x58, 0x91, 0xe6, 0xe7, 0x52, 0xb0, 0x8b, 0x7c, 0x7e, 0x53, 0x93, 0x16, 0x3d, 0x3d, 0xeb, 0xf5,
	0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xee, 0x22, 0x7d, 0x6b, 0x04, 0x00, 0x00,
}
