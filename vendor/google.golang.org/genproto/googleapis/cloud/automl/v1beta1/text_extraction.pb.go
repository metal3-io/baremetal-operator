// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/automl/v1beta1/text_extraction.proto

package automl

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Annotation for identifying spans of text.
type TextExtractionAnnotation struct {
	// Required. Text extraction annotations can either be a text segment or a
	// text relation.
	//
	// Types that are valid to be assigned to Annotation:
	//	*TextExtractionAnnotation_TextSegment
	Annotation isTextExtractionAnnotation_Annotation `protobuf_oneof:"annotation"`
	// Output only. A confidence estimate between 0.0 and 1.0. A higher value
	// means greater confidence in correctness of the annotation.
	Score                float32  `protobuf:"fixed32,1,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextExtractionAnnotation) Reset()         { *m = TextExtractionAnnotation{} }
func (m *TextExtractionAnnotation) String() string { return proto.CompactTextString(m) }
func (*TextExtractionAnnotation) ProtoMessage()    {}
func (*TextExtractionAnnotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_425e57cc225e529c, []int{0}
}

func (m *TextExtractionAnnotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextExtractionAnnotation.Unmarshal(m, b)
}
func (m *TextExtractionAnnotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextExtractionAnnotation.Marshal(b, m, deterministic)
}
func (m *TextExtractionAnnotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextExtractionAnnotation.Merge(m, src)
}
func (m *TextExtractionAnnotation) XXX_Size() int {
	return xxx_messageInfo_TextExtractionAnnotation.Size(m)
}
func (m *TextExtractionAnnotation) XXX_DiscardUnknown() {
	xxx_messageInfo_TextExtractionAnnotation.DiscardUnknown(m)
}

var xxx_messageInfo_TextExtractionAnnotation proto.InternalMessageInfo

type isTextExtractionAnnotation_Annotation interface {
	isTextExtractionAnnotation_Annotation()
}

type TextExtractionAnnotation_TextSegment struct {
	TextSegment *TextSegment `protobuf:"bytes,3,opt,name=text_segment,json=textSegment,proto3,oneof"`
}

func (*TextExtractionAnnotation_TextSegment) isTextExtractionAnnotation_Annotation() {}

func (m *TextExtractionAnnotation) GetAnnotation() isTextExtractionAnnotation_Annotation {
	if m != nil {
		return m.Annotation
	}
	return nil
}

func (m *TextExtractionAnnotation) GetTextSegment() *TextSegment {
	if x, ok := m.GetAnnotation().(*TextExtractionAnnotation_TextSegment); ok {
		return x.TextSegment
	}
	return nil
}

func (m *TextExtractionAnnotation) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TextExtractionAnnotation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TextExtractionAnnotation_TextSegment)(nil),
	}
}

// Model evaluation metrics for text extraction problems.
type TextExtractionEvaluationMetrics struct {
	// Output only. The Area under precision recall curve metric.
	AuPrc float32 `protobuf:"fixed32,1,opt,name=au_prc,json=auPrc,proto3" json:"au_prc,omitempty"`
	// Output only. Metrics that have confidence thresholds.
	// Precision-recall curve can be derived from it.
	ConfidenceMetricsEntries []*TextExtractionEvaluationMetrics_ConfidenceMetricsEntry `protobuf:"bytes,2,rep,name=confidence_metrics_entries,json=confidenceMetricsEntries,proto3" json:"confidence_metrics_entries,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                                                  `json:"-"`
	XXX_unrecognized         []byte                                                    `json:"-"`
	XXX_sizecache            int32                                                     `json:"-"`
}

func (m *TextExtractionEvaluationMetrics) Reset()         { *m = TextExtractionEvaluationMetrics{} }
func (m *TextExtractionEvaluationMetrics) String() string { return proto.CompactTextString(m) }
func (*TextExtractionEvaluationMetrics) ProtoMessage()    {}
func (*TextExtractionEvaluationMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_425e57cc225e529c, []int{1}
}

func (m *TextExtractionEvaluationMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextExtractionEvaluationMetrics.Unmarshal(m, b)
}
func (m *TextExtractionEvaluationMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextExtractionEvaluationMetrics.Marshal(b, m, deterministic)
}
func (m *TextExtractionEvaluationMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextExtractionEvaluationMetrics.Merge(m, src)
}
func (m *TextExtractionEvaluationMetrics) XXX_Size() int {
	return xxx_messageInfo_TextExtractionEvaluationMetrics.Size(m)
}
func (m *TextExtractionEvaluationMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_TextExtractionEvaluationMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_TextExtractionEvaluationMetrics proto.InternalMessageInfo

func (m *TextExtractionEvaluationMetrics) GetAuPrc() float32 {
	if m != nil {
		return m.AuPrc
	}
	return 0
}

func (m *TextExtractionEvaluationMetrics) GetConfidenceMetricsEntries() []*TextExtractionEvaluationMetrics_ConfidenceMetricsEntry {
	if m != nil {
		return m.ConfidenceMetricsEntries
	}
	return nil
}

// Metrics for a single confidence threshold.
type TextExtractionEvaluationMetrics_ConfidenceMetricsEntry struct {
	// Output only. The confidence threshold value used to compute the metrics.
	// Only annotations with score of at least this threshold are considered to
	// be ones the model would return.
	ConfidenceThreshold float32 `protobuf:"fixed32,1,opt,name=confidence_threshold,json=confidenceThreshold,proto3" json:"confidence_threshold,omitempty"`
	// Output only. Recall under the given confidence threshold.
	Recall float32 `protobuf:"fixed32,3,opt,name=recall,proto3" json:"recall,omitempty"`
	// Output only. Precision under the given confidence threshold.
	Precision float32 `protobuf:"fixed32,4,opt,name=precision,proto3" json:"precision,omitempty"`
	// Output only. The harmonic mean of recall and precision.
	F1Score              float32  `protobuf:"fixed32,5,opt,name=f1_score,json=f1Score,proto3" json:"f1_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) Reset() {
	*m = TextExtractionEvaluationMetrics_ConfidenceMetricsEntry{}
}
func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) String() string {
	return proto.CompactTextString(m)
}
func (*TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) ProtoMessage() {}
func (*TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_425e57cc225e529c, []int{1, 0}
}

func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextExtractionEvaluationMetrics_ConfidenceMetricsEntry.Unmarshal(m, b)
}
func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextExtractionEvaluationMetrics_ConfidenceMetricsEntry.Marshal(b, m, deterministic)
}
func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextExtractionEvaluationMetrics_ConfidenceMetricsEntry.Merge(m, src)
}
func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) XXX_Size() int {
	return xxx_messageInfo_TextExtractionEvaluationMetrics_ConfidenceMetricsEntry.Size(m)
}
func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_TextExtractionEvaluationMetrics_ConfidenceMetricsEntry.DiscardUnknown(m)
}

var xxx_messageInfo_TextExtractionEvaluationMetrics_ConfidenceMetricsEntry proto.InternalMessageInfo

func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) GetConfidenceThreshold() float32 {
	if m != nil {
		return m.ConfidenceThreshold
	}
	return 0
}

func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) GetRecall() float32 {
	if m != nil {
		return m.Recall
	}
	return 0
}

func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) GetPrecision() float32 {
	if m != nil {
		return m.Precision
	}
	return 0
}

func (m *TextExtractionEvaluationMetrics_ConfidenceMetricsEntry) GetF1Score() float32 {
	if m != nil {
		return m.F1Score
	}
	return 0
}

func init() {
	proto.RegisterType((*TextExtractionAnnotation)(nil), "google.cloud.automl.v1beta1.TextExtractionAnnotation")
	proto.RegisterType((*TextExtractionEvaluationMetrics)(nil), "google.cloud.automl.v1beta1.TextExtractionEvaluationMetrics")
	proto.RegisterType((*TextExtractionEvaluationMetrics_ConfidenceMetricsEntry)(nil), "google.cloud.automl.v1beta1.TextExtractionEvaluationMetrics.ConfidenceMetricsEntry")
}

func init() {
	proto.RegisterFile("google/cloud/automl/v1beta1/text_extraction.proto", fileDescriptor_425e57cc225e529c)
}

var fileDescriptor_425e57cc225e529c = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0x66, 0xb7, 0x34, 0x80, 0xd3, 0x93, 0x29, 0xd5, 0x92, 0x56, 0x6a, 0xd4, 0x53, 0x4e, 0x5e,
	0x6d, 0x39, 0x72, 0x0a, 0x55, 0x04, 0x97, 0x48, 0x55, 0x52, 0x71, 0x40, 0x91, 0x56, 0xae, 0x33,
	0xd9, 0x5a, 0x72, 0x3c, 0x2b, 0x7b, 0xb6, 0x0a, 0x77, 0xae, 0x1c, 0xb8, 0xf3, 0x44, 0xbc, 0x0a,
	0x2f, 0x81, 0x62, 0x6f, 0x93, 0x22, 0x45, 0xc9, 0xf1, 0x9b, 0xef, 0xc7, 0xdf, 0xce, 0x0e, 0x2b,
	0x2a, 0xc4, 0xca, 0x40, 0xae, 0x0c, 0x36, 0xf3, 0x5c, 0x36, 0x84, 0x4b, 0x93, 0x3f, 0x16, 0xf7,
	0x40, 0xb2, 0xc8, 0x09, 0x56, 0x54, 0xc2, 0x8a, 0x9c, 0x54, 0xa4, 0xd1, 0x8a, 0xda, 0x21, 0x21,
	0x3f, 0x8f, 0x16, 0x11, 0x2c, 0x22, 0x5a, 0x44, 0x6b, 0xe9, 0x89, 0x83, 0x79, 0x1e, 0xaa, 0x25,
	0x58, 0x8a, 0x61, 0xbd, 0x8b, 0x56, 0x2f, 0x6b, 0x9d, 0x4b, 0x6b, 0x91, 0xe4, 0xfa, 0x25, 0x1f,
	0xd9, 0xab, 0x9f, 0x09, 0xcb, 0xee, 0x60, 0x45, 0xa3, 0x4d, 0x87, 0xe1, 0x46, 0xc3, 0xc7, 0xec,
	0xe4, 0x79, 0x60, 0x76, 0xd4, 0x4f, 0x06, 0xdd, 0xeb, 0x81, 0xd8, 0x53, 0x4f, 0xac, 0xc3, 0xa6,
	0x51, 0xff, 0xe5, 0xc5, 0xa4, 0x4b, 0x5b, 0xc8, 0x4f, 0xd9, 0xb1, 0x57, 0xe8, 0x20, 0x4b, 0xfa,
	0xc9, 0x20, 0x9d, 0x44, 0xf0, 0xe9, 0x84, 0xb1, 0x6d, 0xad, 0xab, 0xbf, 0x29, 0xbb, 0xfc, 0xbf,
	0xcf, 0xe8, 0x51, 0x9a, 0x26, 0x90, 0x63, 0x20, 0xa7, 0x95, 0xe7, 0xef, 0x58, 0x47, 0x36, 0x65,
	0xed, 0xd4, 0x53, 0x90, 0x6c, 0x6e, 0x9d, 0xe2, 0xbf, 0x12, 0xd6, 0x53, 0x68, 0x17, 0x7a, 0x0e,
	0x56, 0x41, 0xb9, 0x8c, 0xea, 0x12, 0x2c, 0x39, 0x0d, 0x3e, 0x4b, 0xfb, 0x47, 0x83, 0xee, 0xf5,
	0xf4, 0x60, 0xf9, 0x3d, 0x2f, 0x8b, 0x9b, 0x4d, 0x7c, 0x3b, 0x19, 0x59, 0x72, 0xdf, 0x27, 0x99,
	0xda, 0x35, 0xd7, 0xe0, 0x7b, 0xbf, 0x13, 0x76, 0xb6, 0xdb, 0xc4, 0x0b, 0x76, 0xfa, 0xac, 0x2d,
	0x3d, 0x38, 0xf0, 0x0f, 0x68, 0xe6, 0xed, 0x37, 0xbd, 0xdd, 0x72, 0x77, 0x4f, 0x14, 0x3f, 0x63,
	0x1d, 0x07, 0x4a, 0x1a, 0x13, 0xfe, 0x44, 0x3a, 0x69, 0x11, 0xbf, 0x60, 0x6f, 0x6a, 0x07, 0x4a,
	0x7b, 0x8d, 0x36, 0x7b, 0x19, 0xa8, 0xed, 0x80, 0xbf, 0x67, 0xaf, 0x17, 0x45, 0x19, 0x37, 0x7f,
	0x1c, 0xc8, 0x57, 0x8b, 0x62, 0x1a, 0x76, 0xff, 0x23, 0x61, 0x97, 0x0a, 0x97, 0xfb, 0x76, 0x72,
	0x9b, 0x7c, 0x1b, 0xb6, 0x74, 0x85, 0x46, 0xda, 0x4a, 0xa0, 0xab, 0xf2, 0x0a, 0x6c, 0xb8, 0x9f,
	0x3c, 0x52, 0xb2, 0xd6, 0x7e, 0xe7, 0x41, 0x7e, 0x8c, 0xf0, 0x4f, 0x7a, 0xfe, 0x39, 0x08, 0x67,
	0x37, 0x6b, 0xd1, 0x6c, 0xd8, 0x10, 0x8e, 0xcd, 0xec, 0x6b, 0x14, 0xdd, 0x77, 0x42, 0xd6, 0x87,
	0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x35, 0x1a, 0x34, 0x5e, 0x2b, 0x03, 0x00, 0x00,
}
